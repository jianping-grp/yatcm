# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-25 06:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('compounds', '0015_auto_20171002_0030'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compound_MS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ms_link', models.URLField(blank=True, null=True)),
                ('compound', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='compounds.Compound')),
            ],
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('tcmid_disease_link', models.URLField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_name', models.CharField(blank=True, max_length=200, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=200, null=True)),
                ('uniprot_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tcmid_link', models.URLField(blank=True, max_length=1024, null=True)),
                ('related_diseases', models.ManyToManyField(blank=True, to='compounds.Diseases')),
                ('related_drugs', models.ManyToManyField(blank=True, to='compounds.Drugs')),
                ('related_ingredients', models.ManyToManyField(blank=True, to='compounds.Compound')),
            ],
        ),
    ]
